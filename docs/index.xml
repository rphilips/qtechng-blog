<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>QtechNG: Ontwikkelen voor Brocade on QtechNG Blog</title>
    <link>https://rphilips.github.io/qtechng-blog/</link>
    <description>Recent content in QtechNG: Ontwikkelen voor Brocade on QtechNG Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>nl-nl</language>
    <lastBuildDate>Thu, 21 May 2020 10:30:43 +0200</lastBuildDate>
    
	<atom:link href="https://rphilips.github.io/qtechng-blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuratie bestand</title>
      <link>https://rphilips.github.io/qtechng-blog/post/config/</link>
      <pubDate>Thu, 21 May 2020 10:30:43 +0200</pubDate>
      
      <guid>https://rphilips.github.io/qtechng-blog/post/config/</guid>
      <description>Elk qtechng project komt met een uniek configuratiebestand. Dit bestand bevindt zich steeds in de root-directory van het project en heeft een vaste naam brocade.json. (m.a.w. de qtechng path-naam van de configuratie file is steeds de qtechng path-naam van het project, aangevuld met brocade.json)
Dit bestand is een JSON bestand dat gestructureerd is volgens het schema qtechng.schema.json.
Dit heeft zo zijn voordelen: Visual Studio Code kan gebruik maken van deze specificatie om te helpen bij het editeren.</description>
    </item>
    
    <item>
      <title>Projecten</title>
      <link>https://rphilips.github.io/qtechng-blog/post/project/</link>
      <pubDate>Thu, 21 May 2020 08:59:12 +0200</pubDate>
      
      <guid>https://rphilips.github.io/qtechng-blog/post/project/</guid>
      <description>Projecten: een stand van zaken Brocade 5.00 telt meer dan 14000 bestanden.
Om beheer mogelijk te maken, moet hier structuur worden aangebracht. Het voornaamste structuurelement is het project. Een project staat voor een deelverzameling van deze bestanden, fysiek ondergebracht in een directory.
Van oudsher kent Brocade een thematische opsplitsing: zo werden bestanden rondom het bestellen van dingen gegroepeerd in projecten met namen als: /requests/impala, /requests/repository, /requests/virlib. Deze werden dan aangevuld met minder voor de hand liggende projecten zoals /requests/admin, /requests/gateway, &amp;hellip;</description>
    </item>
    
    <item>
      <title>[mlq]tech(ng)?</title>
      <link>https://rphilips.github.io/qtechng-blog/post/qtech/</link>
      <pubDate>Sun, 17 May 2020 13:23:43 +0200</pubDate>
      
      <guid>https://rphilips.github.io/qtechng-blog/post/qtech/</guid>
      <description>mtech/ltech/qtech/qtechng is het beheersinstrument van de Brocade software.
Al heel snel bleek dat we een adequaat instrument nodig hadden om de bibliotheeksoftware te beheren. Dit was al zo in het begin van de jaren &amp;lsquo;90 toen we nog automatiseerden met Vubis.
Ook in die dagen hadden we al heel wat software die eigen was aan de Universiteit Antwerpen en de bibliotheken die toen deel uitmaakten van Vubis Antwerpen: er was natuurlijk het Impala project met VirLib, Agrippa (onze archiefsoftware).</description>
    </item>
    
    <item>
      <title>Brocade</title>
      <link>https://rphilips.github.io/qtechng-blog/post/brocade/</link>
      <pubDate>Sun, 17 May 2020 11:10:47 +0200</pubDate>
      
      <guid>https://rphilips.github.io/qtechng-blog/post/brocade/</guid>
      <description>Deze blogbijdrage gaat over Brocade.
Ik ga niet uitleggen wat de functionaliteit is die de Brocade software aanbiedt: daarvoor kan je veel beter terecht op de Wikipedia pagina.
Deze tekst gaat over de software zelf: wat designprincipe zijn, hoeveel software er is en hoe deze wordt beheerd.
Het belangrijkste principe is wel dat Brocade een werk van lange adem is. De wereld van (wetenschappelijke) bibliotheken en archieven verandert razendsnel. Dit gaat samen met de aard van informatieverschaffing maar evengoed met het veranderend statuut en aanzien van wetenschapsbeoefenaars.</description>
    </item>
    
  </channel>
</rss>